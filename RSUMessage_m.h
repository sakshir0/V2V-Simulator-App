//
// Generated file, do not edit! Created by nedtool 5.3 from RSUMessage.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __RSUMESSAGE_M_H
#define __RSUMESSAGE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0503
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
 
#include "veins/modules/messages/WaveShortMessage_m.h"
// }}

/**
 * Class generated from <tt>RSUMessage.msg:7</tt> by nedtool.
 * <pre>
 * packet RSUMessage extends WaveShortMessage
 * {
 *     string allowedVehicles[];
 * }
 * </pre>
 */
class RSUMessage : public ::WaveShortMessage
{
  protected:
    ::omnetpp::opp_string *allowedVehicles; // array ptr
    unsigned int allowedVehicles_arraysize;

  private:
    void copy(const RSUMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const RSUMessage&);

  public:
    RSUMessage(const char *name=nullptr, short kind=0);
    RSUMessage(const RSUMessage& other);
    virtual ~RSUMessage();
    RSUMessage& operator=(const RSUMessage& other);
    virtual RSUMessage *dup() const override {return new RSUMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual void setAllowedVehiclesArraySize(unsigned int size);
    virtual unsigned int getAllowedVehiclesArraySize() const;
    virtual const char * getAllowedVehicles(unsigned int k) const;
    virtual void setAllowedVehicles(unsigned int k, const char * allowedVehicles);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const RSUMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, RSUMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __RSUMESSAGE_M_H

